{"version":3,"file":"plugins.min.js","sources":["../src/Parallax.ts","../src/Fade.ts","../src/AutoPlay.ts"],"sourcesContent":["import Flicking, { FlickingEvent, Plugin } from \"@egjs/flicking\";\n\n/**\n * You can apply parallax effect while panel is moving.\n * @ko 패널들을 움직이면서 parallax 효과를 부여할 수 있습니다.\n * @memberof eg.Flicking.plugins\n */\nclass Parallax implements Plugin {\n  /**\n   * @param - Selector of the element to apply parallax effect <ko> Parallax 효과를 적용할 엘리먼트의 선택자 </ko>\n   * @param - Effect amplication scale <ko>효과 증폭도</ko>\n   * @example\n   * flicking.addPlugins(new eg.Flicking.plugins.Parallax(\"img\", 1));\n   */\n  constructor(private selector: string = \"\", private scale: number = 1) {}\n  public init(flicking: Flicking): void {\n    flicking.on(\"move\", this.onMove);\n    this.move(flicking);\n  }\n  public update(flicking: Flicking): void {\n    this.move(flicking);\n  }\n  public destroy(flicking: Flicking): void {\n    flicking.off(\"move\", this.onMove);\n  }\n  private onMove = (e: FlickingEvent): void => {\n    this.move(e.currentTarget);\n  }\n  private move(flicking: Flicking): void {\n    const panels = flicking.getVisiblePanels();\n\n    panels.forEach(panel => {\n      const progress = panel.getOutsetProgress();\n      const el = panel.getElement();\n      const target = el.querySelector<HTMLElement>(this.selector)!;\n      const parentTarget = target.parentNode as Element;\n      const rect = target.getBoundingClientRect();\n      const parentRect = parentTarget.getBoundingClientRect();\n      const position = (parentRect.width - rect.width) / 2 * progress * this.scale;\n      const transform = `translate(-50%) translate(${position}px)`;\n      const style = target.style;\n\n      style.cssText += `transform: ${transform};-webkit-transform: ${transform};-ms-transform:${transform}`;\n    });\n  }\n}\nexport default Parallax;\n","import Flicking, { FlickingEvent, Plugin } from \"@egjs/flicking\";\n\n/**\n * You can apply fade in / out effect while panel is moving.\n * @ko 패널들을 움직이면서 fade in / out 효과를 부여할 수 있습니다.\n * @memberof eg.Flicking.plugins\n */\nclass Fade implements Plugin {\n  /**\n   * @param - The selector of the element to which the fade effect is to be applied. If the selector is blank, it applies to panel element. <ko>Fade 효과를 적용할 대상의 선택자. 선택자가 공백이면 패널 엘리먼트에 적용된다.</ko>\n   * @param - Effect amplication scale <ko>효과 증폭도</ko>\n   * @example\n   * flicking.addPlugins(new eg.Flicking.plugins.Fade(\"p\", 1));\n   */\n  constructor(private selector: string = \"\", private scale: number = 1) {}\n  public init(flicking: Flicking): void {\n    flicking.on(\"move\", this.onMove);\n    this.move(flicking);\n  }\n  public update(flicking: Flicking): void {\n    this.move(flicking);\n  }\n  public destroy(flicking: Flicking): void {\n    flicking.off(\"move\", this.onMove);\n  }\n  private onMove = (e: FlickingEvent): void => {\n    this.move(e.currentTarget);\n  }\n  private move(flicking: Flicking): void {\n    const panels = flicking.getVisiblePanels();\n    const selector = this.selector;\n    const scale = this.scale;\n\n    panels.forEach(panel => {\n      const progress = panel.getOutsetProgress();\n      const el = panel.getElement();\n      const target = selector ? el.querySelector<HTMLElement>(selector)! : el;\n      const opacity = Math.min(1, Math.max(0, (1 - Math.abs(progress * scale))));\n\n      target.style.opacity = `${opacity}`;\n    });\n  }\n}\n\nexport default Fade;\n","import Flicking, { FlickingEvent, Plugin, Direction } from \"@egjs/flicking\";\n\n/**\n * Plugin that allow you to automatically move to the next/previous panel, on a specific time basis\n * @ko 일정 시간마다, 자동으로 다음/이전 패널로 넘어가도록 할 수 있는 플러그인\n * @memberof eg.Flicking.plugins\n */\nclass AutoPlay implements Plugin {\n  private timerId = 0;\n  /**\n   * @param - Time to wait before moving on to the next panel <ko>다음 패널로 움직이기까지 대기 시간</ko>\n   * @param - The direction in which the panel moves. <ko>패널이 움직이는 방향</ko>\n   * @example\n   * flicking.addPlugins(new eg.Flicking.plugins.AutoPlay(2000, \"NEXT\"));\n   */\n  constructor(private duration: number = 2000, private direction: Direction[keyof Direction] = \"NEXT\") {}\n  public init(flicking: Flicking): void {\n    flicking.on({\n      move: this.onStop,\n      holdStart: this.onStop,\n      select: this.onPlay,\n      moveEnd: this.onPlay,\n    });\n\n    this.play(flicking);\n  }\n  public destroy(flicking: Flicking): void {\n    this.onStop();\n    flicking.off(\"moveStart\", this.onStop);\n    flicking.off(\"holdStart\", this.onStop);\n    flicking.off(\"moveEnd\", this.onPlay);\n    flicking.off(\"select\", this.onPlay);\n  }\n  private play(flicking: Flicking) {\n    this.onStop();\n\n    this.timerId = window.setTimeout(() => {\n      flicking[this.direction === \"NEXT\" ? \"next\" : \"prev\"]();\n\n      this.play(flicking);\n    }, this.duration);\n  }\n  private onPlay = (e: FlickingEvent): void => {\n    this.play(e.currentTarget);\n  }\n  private onStop = () => {\n    clearTimeout(this.timerId);\n  }\n}\n\nexport default AutoPlay;\n"],"names":["selector","scale","e","_this","move","currentTarget","flicking","on","this","onMove","off","getVisiblePanels","forEach","panel","progress","getOutsetProgress","target","getElement","querySelector","parentTarget","parentNode","rect","getBoundingClientRect","transform","width","style","cssText","panels","el","opacity","Math","min","max","abs","duration","direction","play","clearTimeout","timerId","onStop","holdStart","select","onPlay","moveEnd","window","setTimeout"],"mappings":";;;;;;;;gQAOA,4BAOsBA,EAA+BC,gBAA/BD,mBAA+BC,8BAA/BD,aAA+BC,cAWlC,SAACC,GAChBC,EAAKC,KAAKF,EAAEG,gDAXd,SAAYC,GACVA,EAASC,GAAG,OAAQC,KAAKC,aACpBL,KAAKE,aAEZ,SAAcA,QACPF,KAAKE,cAEZ,SAAeA,GACbA,EAASI,IAAI,OAAQF,KAAKC,gBAK5B,SAAaH,cACIA,EAASK,mBAEjBC,QAAQ,SAAAC,OACPC,EAAWD,EAAME,oBAEjBC,EADKH,EAAMI,aACCC,cAA2Bf,EAAKH,UAC5CmB,EAAeH,EAAOI,WACtBC,EAAOL,EAAOM,wBAGdC,EAAY,8BAFCJ,EAAaG,wBACHE,MAAQH,EAAKG,OAAS,EAAIV,EAAWX,EAAKF,YAEzDe,EAAOS,MAEfC,SAAW,cAAcH,yBAAgCA,oBAA2BA,kCC5B1EvB,EAA+BC,gBAA/BD,mBAA+BC,8BAA/BD,aAA+BC,cAWlC,SAACC,GAChBC,EAAKC,KAAKF,EAAEG,gDAXd,SAAYC,GACVA,EAASC,GAAG,OAAQC,KAAKC,aACpBL,KAAKE,aAEZ,SAAcA,QACPF,KAAKE,cAEZ,SAAeA,GACbA,EAASI,IAAI,OAAQF,KAAKC,gBAK5B,SAAaH,OACLqB,EAASrB,EAASK,mBAClBX,EAAWQ,KAAKR,SAChBC,EAAQO,KAAKP,MAEnB0B,EAAOf,QAAQ,SAAAC,OACPC,EAAWD,EAAME,oBACjBa,EAAKf,EAAMI,aACXD,EAAShB,EAAW4B,EAAGV,cAA2BlB,GAAa4B,EAC/DC,EAAUC,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAI,EAAIF,KAAKG,IAAInB,EAAWb,KAEjEe,EAAOS,MAAMI,QAAU,GAAGA,kCCxBVK,EAAiCC,gBAAjCD,oBAAiCC,mCAAjCD,iBAAiCC,eAPnC,cAkCD,SAACjC,GAChBC,EAAKiC,KAAKlC,EAAEG,4BAEG,WACfgC,aAAalC,EAAKmC,0CA9BpB,SAAYhC,GACVA,EAASC,GAAG,CACVH,KAAMI,KAAK+B,OACXC,UAAWhC,KAAK+B,OAChBE,OAAQjC,KAAKkC,OACbC,QAASnC,KAAKkC,cAGXN,KAAK9B,cAEZ,SAAeA,QACRiC,SACLjC,EAASI,IAAI,YAAaF,KAAK+B,QAC/BjC,EAASI,IAAI,YAAaF,KAAK+B,QAC/BjC,EAASI,IAAI,UAAWF,KAAKkC,QAC7BpC,EAASI,IAAI,SAAUF,KAAKkC,gBAE9B,SAAapC,mBACNiC,cAEAD,QAAUM,OAAOC,WAAW,WAC/BvC,EAA4B,SAAnBH,EAAKgC,UAAuB,OAAS,UAE9ChC,EAAKiC,KAAK9B,IACTE,KAAK0B"}