{"version":3,"file":"plugins.js","sources":["../src/Parallax.ts","../src/Fade.ts","../src/AutoPlay.ts","../src/index.ts"],"sourcesContent":["import Flicking, { EVENTS, Plugin } from \"@egjs/flicking\";\n\n/**\n * You can apply parallax effect while panel is moving.\n * @ko 패널들을 움직이면서 parallax 효과를 부여할 수 있습니다.\n * @memberof Flicking.Plugins\n */\nclass Parallax implements Plugin {\n  private _flicking: Flicking | null;\n\n  /* Options  */\n  private _selector: string;\n  private _scale: number;\n\n  public get selector() { return this._selector; }\n  public get scale() { return this._scale; }\n\n  public set selector(val: string) { this._selector = val; }\n  public set scale(val: number) { this._scale = val; }\n\n  /**\n   * @param {string} selector Selector of the element to apply parallax effect<ko> Parallax 효과를 적용할 엘리먼트의 선택자 </ko>\n   * @param {number} scale Effect amplication scale<ko>효과 증폭도</ko>\n   * @example\n   * ```ts\n   * flicking.addPlugins(new Parallax(\"img\", 1));\n   * ```\n   */\n  public constructor(selector = \"\", scale = 1) {\n    this._flicking = null;\n    this._selector = selector;\n    this._scale = scale;\n  }\n\n  public init(flicking: Flicking): void {\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n\n    flicking.on(EVENTS.MOVE, this._onMove);\n    flicking.on(EVENTS.AFTER_RESIZE, this.update);\n    this._onMove();\n  }\n\n  public destroy(): void {\n    if (!this._flicking) return;\n\n    this._flicking.off(EVENTS.MOVE, this._onMove);\n    this._flicking = null;\n  }\n\n  public update = (): void => {\n    this._onMove();\n  };\n\n  private _onMove = (): void => {\n    const flicking = this._flicking;\n\n    if (!flicking) return;\n\n    const panels = flicking.visiblePanels;\n\n    panels.forEach(panel => {\n      const progress = panel.outsetProgress;\n      const el = panel.element;\n      const target = this._selector ? el.querySelector<HTMLElement>(this._selector)! : el;\n      const parentTarget = target.parentNode as Element;\n      const rect = target.getBoundingClientRect();\n      const parentRect = parentTarget.getBoundingClientRect();\n      const position = (parentRect.width - rect.width) / 2 * progress * this._scale;\n      const transform = `translate(-50%) translate(${position}px)`;\n      const style = target.style;\n\n      style.cssText += `transform: ${transform};-webkit-transform: ${transform};-ms-transform:${transform}`;\n    });\n  };\n}\nexport default Parallax;\n","import Flicking, { EVENTS, Plugin } from \"@egjs/flicking\";\n\n/**\n * You can apply fade in / out effect while panel is moving.\n * @ko 패널들을 움직이면서 fade in / out 효과를 부여할 수 있습니다.\n * @memberof Flicking.Plugins\n */\nclass Fade implements Plugin {\n  private _flicking: Flicking | null;\n\n  /* Options  */\n  private _selector: string;\n  private _scale: number;\n\n  public get selector() { return this._selector; }\n  public get scale() { return this._scale; }\n\n  public set selector(val: string) { this._selector = val; }\n  public set scale(val: number) { this._scale = val; }\n\n  /**\n   * @param - The selector of the element to which the fade effect is to be applied. If the selector is blank, it applies to panel element. <ko>Fade 효과를 적용할 대상의 선택자. 선택자가 공백이면 패널 엘리먼트에 적용된다.</ko>\n   * @param - Effect amplication scale<ko>효과 증폭도</ko>\n   * @example\n   * ```ts\n   * flicking.addPlugins(new Fade(\"p\", 1));\n   * ```\n   */\n  public constructor(selector = \"\", scale = 1) {\n    this._flicking = null;\n    this._selector = selector;\n    this._scale = scale;\n  }\n\n  public init(flicking: Flicking): void {\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n\n    flicking.on(EVENTS.MOVE, this._onMove);\n    flicking.on(EVENTS.AFTER_RESIZE, this.update);\n    this._onMove();\n  }\n\n  public destroy(): void {\n    if (!this._flicking) return;\n\n    this._flicking.off(EVENTS.MOVE, this._onMove);\n    this._flicking = null;\n  }\n\n  public update = (): void => {\n    this._onMove();\n  };\n\n  private _onMove = (): void => {\n    const flicking = this._flicking;\n    const selector = this._selector;\n    const scale = this._scale;\n\n    if (!flicking) return;\n\n    const panels = flicking.visiblePanels;\n\n    panels.forEach(panel => {\n      const progress = panel.outsetProgress;\n      const el = panel.element;\n      const target = selector ? el.querySelector<HTMLElement>(selector)! : el;\n      const opacity = Math.min(1, Math.max(0, (1 - Math.abs(progress * scale))));\n\n      target.style.opacity = `${opacity}`;\n    });\n  };\n}\n\nexport default Fade;\n","import Flicking, { EVENTS, Plugin, DIRECTION } from \"@egjs/flicking\";\n\ninterface AutoPlayOptions {\n  duration: number;\n  direction: typeof DIRECTION[\"NEXT\"] | typeof DIRECTION[\"PREV\"];\n  stopOnHover: boolean;\n}\n\n/**\n * Plugin that allow you to automatically move to the next/previous panel, on a specific time basis\n * @ko 일정 시간마다, 자동으로 다음/이전 패널로 넘어가도록 할 수 있는 플러그인\n * @memberof Flicking.Plugins\n */\nclass AutoPlay implements Plugin {\n  /* Options */\n  private _duration: AutoPlayOptions[\"duration\"];\n  private _direction: AutoPlayOptions[\"direction\"];\n  private _stopOnHover: AutoPlayOptions[\"stopOnHover\"];\n\n  /* Internal Values */\n  private _flicking: Flicking | null = null;\n  private _timerId = 0;\n  private _mouseEntered = false;\n\n  public get duration() { return this._duration; }\n  public get direction() { return this._direction; }\n  public get stopOnHover() { return this._stopOnHover; }\n\n  public set duration(val: number) { this._duration = val; }\n  public set direction(val: AutoPlayOptions[\"direction\"]) { this._direction = val; }\n  public set stopOnHover(val: boolean) { this._stopOnHover = val; }\n\n  /**\n   * @param {AutoPlayOptions} options Options for the AutoPlay instance.<ko>AutoPlay 옵션</ko>\n   * @param {number} options.duration Time to wait before moving on to the next panel.<ko>다음 패널로 움직이기까지 대기 시간</ko>\n   * @param {\"PREV\" | \"NEXT\"} options.direction The direction in which the panel moves.<ko>패널이 움직이는 방향</ko>\n   * @param {boolean} options.stopOnHover Whether to stop when mouse hover upon the element.<ko>엘리먼트에 마우스를 올렸을 때 AutoPlay를 정지할지 여부</ko>\n   * @example\n   * ```ts\n   * flicking.addPlugins(new AutoPlay({ duration: 2000, direction: \"NEXT\" }));\n   * ```\n   */\n  public constructor({\n    duration = 2000,\n    direction = DIRECTION.NEXT,\n    stopOnHover = false\n  }: Partial<AutoPlayOptions> = {}) {\n    this._duration = duration;\n    this._direction = direction;\n    this._stopOnHover = stopOnHover;\n  }\n\n  public init(flicking: Flicking): void {\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    flicking.on({\n      [EVENTS.MOVE_START]: this.stop,\n      [EVENTS.HOLD_START]: this.stop,\n      [EVENTS.MOVE_END]: this.play,\n      [EVENTS.SELECT]: this.play\n    });\n\n    this._flicking = flicking;\n    if (this._stopOnHover) {\n      const targetEl = this._flicking.element;\n      targetEl.addEventListener(\"mouseenter\", this._onMouseEnter, false);\n      targetEl.addEventListener(\"mouseleave\", this._onMouseLeave, false);\n    }\n\n    this.play();\n  }\n\n  public destroy(): void {\n    const flicking = this._flicking;\n\n    this._mouseEntered = false;\n    this.stop();\n\n    if (!flicking) {\n      return;\n    }\n\n    flicking.off(EVENTS.MOVE_START, this.stop);\n    flicking.off(EVENTS.HOLD_START, this.stop);\n    flicking.off(EVENTS.MOVE_END, this.play);\n    flicking.off(EVENTS.SELECT, this.play);\n\n    const targetEl = flicking.element;\n    targetEl.removeEventListener(\"mouseenter\", this._onMouseEnter, false);\n    targetEl.removeEventListener(\"mouseleave\", this._onMouseLeave, false);\n\n    this._flicking = null;\n  }\n\n  public update(): void {\n    // DO-NOTHING\n  }\n\n  public play = () => {\n    const flicking = this._flicking;\n    const direction = this._direction;\n\n    if (!flicking) {\n      return;\n    }\n\n    this.stop();\n\n    if (this._mouseEntered || flicking.animating) {\n      return;\n    }\n\n    this._timerId = window.setTimeout(() => {\n      if (direction === DIRECTION.NEXT) {\n        flicking.next().catch(() => void 0);\n      } else {\n        flicking.prev().catch(() => void 0);\n      }\n\n      this.play();\n    }, this._duration);\n  };\n\n  public stop = () => {\n    clearTimeout(this._timerId);\n  };\n\n  private _onMouseEnter = () => {\n    this._mouseEntered = true;\n    this.stop();\n  };\n\n  private _onMouseLeave = () => {\n    this._mouseEntered = false;\n    this.play();\n  };\n}\n\nexport default AutoPlay;\n","/**\n * @namespace Flicking\n */\n/**\n * @namespace Flicking.Plugins\n */\nimport Parallax from \"./Parallax\";\nimport Fade from \"./Fade\";\nimport AutoPlay from \"./AutoPlay\";\n\nexport {\n  Parallax,\n  Fade,\n  AutoPlay\n};\n"],"names":["selector","scale","_this","_onMove","flicking","_flicking","panels","visiblePanels","forEach","panel","progress","outsetProgress","el","element","target","_selector","querySelector","parentTarget","parentNode","rect","getBoundingClientRect","parentRect","position","width","_scale","transform","style","cssText","Object","val","destroy","on","EVENTS","MOVE","AFTER_RESIZE","update","off","opacity","Math","min","max","abs","_a","_b","_c","duration","_d","direction","DIRECTION","NEXT","_e","stopOnHover","_direction","stop","_mouseEntered","animating","_timerId","window","setTimeout","next","catch","prev","play","_duration","clearTimeout","_stopOnHover","MOVE_START","HOLD_START","MOVE_END","SELECT","targetEl","addEventListener","_onMouseEnter","_onMouseLeave","removeEventListener"],"mappings":"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"}